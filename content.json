{"meta":{"title":"无形","subtitle":"","description":"","author":"无形","url":"https://abusizhishen.github.io","root":"/"},"pages":[],"posts":[{"title":"matrix","slug":"matrix","date":"2022-06-25T13:45:03.000Z","updated":"2022-06-25T13:45:58.494Z","comments":true,"path":"2022/06/25/matrix/","link":"","permalink":"https://abusizhishen.github.io/2022/06/25/matrix/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748package mainimport &quot;fmt&quot;func main() &#123; var nums = [][]int&#123; &#123;1, 2, 3&#125;, &#123;4, 5, 6&#125;, &#123;7, 8, 9&#125;, &#125; fmt.Println(print(nums))&#125;func print(nums [][]int) []int &#123; if len(nums) == 0 || len(nums[0]) == 0 &#123; return nil &#125; var l, r, b, t = 0, len(nums[0]) - 1, 0, len(nums) - 1 var x, y int var result []int for l &lt;= r &amp;&amp; b &lt;= t &#123; //从左至右遍历，b++ for x = l; x &lt;= r; x++ &#123; result = append(result, nums[b][x]) &#125; b++ for y = b; y &lt;= t; y++ &#123; result = append(result, nums[y][r]) &#125; r-- for x = r; x &gt;= l &amp;&amp; b &lt;= t; x-- &#123; result = append(result, nums[t][x]) &#125; t-- for y = t; y &gt;= b &amp;&amp; l &lt;= r; y-- &#123; result = append(result, nums[y][l]) &#125; l++ &#125; return result&#125;","categories":[],"tags":[{"name":"matrix","slug":"matrix","permalink":"https://abusizhishen.github.io/tags/matrix/"},{"name":"array","slug":"array","permalink":"https://abusizhishen.github.io/tags/array/"}]},{"title":"堆排序","slug":"heapSort","date":"2022-06-19T15:21:47.000Z","updated":"2022-06-25T13:31:53.695Z","comments":true,"path":"2022/06/19/heapSort/","link":"","permalink":"https://abusizhishen.github.io/2022/06/19/heapSort/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142package mainimport &quot;fmt&quot;func main() &#123; var nums = []int&#123;1, 2, 10, 100, 7, 3, 4, 9, 8, 6, 4&#125; heapSort(nums) fmt.Println(nums)&#125;func heapSort(nums []int) &#123; if len(nums) &lt;= 1 &#123; return &#125; for i := len(nums); i &gt;= 2; i-- &#123; buildMInHeap(nums, i) nums[0], nums[i-1] = nums[i-1], nums[0] &#125;&#125;func buildMInHeap(nums []int, end int) &#123; //堆最大深度 var depth = end/2 - 1 for i := depth; i &gt;= 0; i-- &#123; //假设根节点为最大节点 max := i //左右节点，分别和左右节点比较 left, right := 2*i+1, 2*i+2 if left &lt; end &amp;&amp; nums[left] &gt; nums[max] &#123; max = left &#125; if right &lt; end &amp;&amp; nums[right] &gt; nums[max] &#123; max = right &#125; //如果根节点不是最大节点就交换 if max != i &#123; nums[i], nums[max] = nums[max], nums[i] &#125; &#125;&#125;","categories":[{"name":"数组","slug":"数组","permalink":"https://abusizhishen.github.io/categories/%E6%95%B0%E7%BB%84/"},{"name":"堆","slug":"数组/堆","permalink":"https://abusizhishen.github.io/categories/%E6%95%B0%E7%BB%84/%E5%A0%86/"},{"name":"排序","slug":"数组/堆/排序","permalink":"https://abusizhishen.github.io/categories/%E6%95%B0%E7%BB%84/%E5%A0%86/%E6%8E%92%E5%BA%8F/"}],"tags":[{"name":"堆排序","slug":"堆排序","permalink":"https://abusizhishen.github.io/tags/%E5%A0%86%E6%8E%92%E5%BA%8F/"}]},{"title":"快速排序","slug":"quickSort","date":"2022-06-19T12:21:28.000Z","updated":"2022-06-25T13:31:53.695Z","comments":true,"path":"2022/06/19/quickSort/","link":"","permalink":"https://abusizhishen.github.io/2022/06/19/quickSort/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142package mainimport &quot;fmt&quot;func main() &#123; var nums = []int&#123;1, 7, 3, 4, 9, 5, 6, 3, 4&#125; quickSort(nums, 0, len(nums)-1) fmt.Println(nums) // output [1 3 3 4 4 5 6 7 9]&#125;//快速排序func quickSort(nums []int, l, r int) &#123; //边界条件 if l &gt;= r &#123; return &#125; //分区 pivot := partition(nums, l, r) //分别对左右两边快排 quickSort(nums, l, pivot-1) quickSort(nums, pivot+1, r)&#125;//分区func partition(nums []int, l, r int) int &#123; //以最后一位为基准 var start, pivot = l, r for i := l; i &lt; r; i++ &#123; //如果比基准小就放到左边 if nums[i] &lt; nums[pivot] &#123; nums[i], nums[start] = nums[start], nums[i] start++ &#125; &#125; //start和基准交换 nums[start], nums[pivot] = nums[pivot], nums[start] return start&#125;","categories":[{"name":"排序","slug":"排序","permalink":"https://abusizhishen.github.io/categories/%E6%8E%92%E5%BA%8F/"},{"name":"数组","slug":"排序/数组","permalink":"https://abusizhishen.github.io/categories/%E6%8E%92%E5%BA%8F/%E6%95%B0%E7%BB%84/"}],"tags":[{"name":"快排","slug":"快排","permalink":"https://abusizhishen.github.io/tags/%E5%BF%AB%E6%8E%92/"}]}],"categories":[{"name":"数组","slug":"数组","permalink":"https://abusizhishen.github.io/categories/%E6%95%B0%E7%BB%84/"},{"name":"堆","slug":"数组/堆","permalink":"https://abusizhishen.github.io/categories/%E6%95%B0%E7%BB%84/%E5%A0%86/"},{"name":"排序","slug":"数组/堆/排序","permalink":"https://abusizhishen.github.io/categories/%E6%95%B0%E7%BB%84/%E5%A0%86/%E6%8E%92%E5%BA%8F/"},{"name":"排序","slug":"排序","permalink":"https://abusizhishen.github.io/categories/%E6%8E%92%E5%BA%8F/"},{"name":"数组","slug":"排序/数组","permalink":"https://abusizhishen.github.io/categories/%E6%8E%92%E5%BA%8F/%E6%95%B0%E7%BB%84/"}],"tags":[{"name":"matrix","slug":"matrix","permalink":"https://abusizhishen.github.io/tags/matrix/"},{"name":"array","slug":"array","permalink":"https://abusizhishen.github.io/tags/array/"},{"name":"堆排序","slug":"堆排序","permalink":"https://abusizhishen.github.io/tags/%E5%A0%86%E6%8E%92%E5%BA%8F/"},{"name":"快排","slug":"快排","permalink":"https://abusizhishen.github.io/tags/%E5%BF%AB%E6%8E%92/"}]}