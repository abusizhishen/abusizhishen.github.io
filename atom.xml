<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>无形</title>
  
  
  <link href="https://abusizhishen.github.io/atom.xml" rel="self"/>
  
  <link href="https://abusizhishen.github.io/"/>
  <updated>2022-06-25T13:45:58.494Z</updated>
  <id>https://abusizhishen.github.io/</id>
  
  <author>
    <name>无形</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>matrix</title>
    <link href="https://abusizhishen.github.io/2022/06/25/matrix/"/>
    <id>https://abusizhishen.github.io/2022/06/25/matrix/</id>
    <published>2022-06-25T13:45:03.000Z</published>
    <updated>2022-06-25T13:45:58.494Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> nums = [][]<span class="type">int</span>&#123;</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;,</span><br><span class="line">&#123;<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="built_in">print</span>(nums))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">print</span><span class="params">(nums [][]<span class="type">int</span>)</span></span> []<span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(nums) == <span class="number">0</span> || <span class="built_in">len</span>(nums[<span class="number">0</span>]) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> l, r, b, t = <span class="number">0</span>, <span class="built_in">len</span>(nums[<span class="number">0</span>]) - <span class="number">1</span>, <span class="number">0</span>, <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> x, y <span class="type">int</span></span><br><span class="line"><span class="keyword">var</span> result []<span class="type">int</span></span><br><span class="line"><span class="keyword">for</span> l &lt;= r &amp;&amp; b &lt;= t &#123;</span><br><span class="line"><span class="comment">//从左至右遍历，b++</span></span><br><span class="line"><span class="keyword">for</span> x = l; x &lt;= r; x++ &#123;</span><br><span class="line">result = <span class="built_in">append</span>(result, nums[b][x])</span><br><span class="line">&#125;</span><br><span class="line">b++</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> y = b; y &lt;= t; y++ &#123;</span><br><span class="line">result = <span class="built_in">append</span>(result, nums[y][r])</span><br><span class="line">&#125;</span><br><span class="line">r--</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x = r; x &gt;= l &amp;&amp; b &lt;= t; x-- &#123;</span><br><span class="line">result = <span class="built_in">append</span>(result, nums[t][x])</span><br><span class="line">&#125;</span><br><span class="line">t--</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> y = t; y &gt;= b &amp;&amp; l &lt;= r; y-- &#123;</span><br><span class="line">result = <span class="built_in">append</span>(result, nums[y][l])</span><br><span class="line">&#125;</span><br><span class="line">l++</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    
    <category term="matrix" scheme="https://abusizhishen.github.io/tags/matrix/"/>
    
    <category term="array" scheme="https://abusizhishen.github.io/tags/array/"/>
    
  </entry>
  
  <entry>
    <title>堆排序</title>
    <link href="https://abusizhishen.github.io/2022/06/19/heapSort/"/>
    <id>https://abusizhishen.github.io/2022/06/19/heapSort/</id>
    <published>2022-06-19T15:21:47.000Z</published>
    <updated>2022-06-25T13:31:53.695Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> nums = []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">4</span>&#125;</span><br><span class="line">heapSort(nums)</span><br><span class="line">fmt.Println(nums)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">heapSort</span><span class="params">(nums []<span class="type">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(nums) &lt;= <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="built_in">len</span>(nums); i &gt;= <span class="number">2</span>; i-- &#123;</span><br><span class="line">buildMInHeap(nums, i)</span><br><span class="line">nums[<span class="number">0</span>], nums[i<span class="number">-1</span>] = nums[i<span class="number">-1</span>], nums[<span class="number">0</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">buildMInHeap</span><span class="params">(nums []<span class="type">int</span>, end <span class="type">int</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">//堆最大深度</span></span><br><span class="line"><span class="keyword">var</span> depth = end/<span class="number">2</span> - <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i := depth; i &gt;= <span class="number">0</span>; i-- &#123;</span><br><span class="line"><span class="comment">//假设根节点为最大节点</span></span><br><span class="line">max := i</span><br><span class="line"><span class="comment">//左右节点，分别和左右节点比较</span></span><br><span class="line">left, right := <span class="number">2</span>*i+<span class="number">1</span>, <span class="number">2</span>*i+<span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> left &lt; end &amp;&amp; nums[left] &gt; nums[max] &#123;</span><br><span class="line">max = left</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> right &lt; end &amp;&amp; nums[right] &gt; nums[max] &#123;</span><br><span class="line">max = right</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果根节点不是最大节点就交换</span></span><br><span class="line"><span class="keyword">if</span> max != i &#123;</span><br><span class="line">nums[i], nums[max] = nums[max], nums[i]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="数组" scheme="https://abusizhishen.github.io/categories/%E6%95%B0%E7%BB%84/"/>
    
    <category term="堆" scheme="https://abusizhishen.github.io/categories/%E6%95%B0%E7%BB%84/%E5%A0%86/"/>
    
    <category term="排序" scheme="https://abusizhishen.github.io/categories/%E6%95%B0%E7%BB%84/%E5%A0%86/%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="堆排序" scheme="https://abusizhishen.github.io/tags/%E5%A0%86%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>快速排序</title>
    <link href="https://abusizhishen.github.io/2022/06/19/quickSort/"/>
    <id>https://abusizhishen.github.io/2022/06/19/quickSort/</id>
    <published>2022-06-19T12:21:28.000Z</published>
    <updated>2022-06-25T13:31:53.695Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> nums = []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">quickSort(nums, <span class="number">0</span>, <span class="built_in">len</span>(nums)<span class="number">-1</span>)</span><br><span class="line">fmt.Println(nums)</span><br><span class="line"><span class="comment">// output [1 3 3 4 4 5 6 7 9]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//快速排序</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">quickSort</span><span class="params">(nums []<span class="type">int</span>, l, r <span class="type">int</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">//边界条件</span></span><br><span class="line"><span class="keyword">if</span> l &gt;= r &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//分区</span></span><br><span class="line">pivot := partition(nums, l, r)</span><br><span class="line"><span class="comment">//分别对左右两边快排</span></span><br><span class="line">quickSort(nums, l, pivot<span class="number">-1</span>)</span><br><span class="line">quickSort(nums, pivot+<span class="number">1</span>, r)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//分区</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">partition</span><span class="params">(nums []<span class="type">int</span>, l, r <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="comment">//以最后一位为基准</span></span><br><span class="line"><span class="keyword">var</span> start, pivot = l, r</span><br><span class="line"><span class="keyword">for</span> i := l; i &lt; r; i++ &#123;</span><br><span class="line"><span class="comment">//如果比基准小就放到左边</span></span><br><span class="line"><span class="keyword">if</span> nums[i] &lt; nums[pivot] &#123;</span><br><span class="line">nums[i], nums[start] = nums[start], nums[i]</span><br><span class="line">start++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//start和基准交换</span></span><br><span class="line">nums[start], nums[pivot] = nums[pivot], nums[start]</span><br><span class="line"><span class="keyword">return</span> start</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="排序" scheme="https://abusizhishen.github.io/categories/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="数组" scheme="https://abusizhishen.github.io/categories/%E6%8E%92%E5%BA%8F/%E6%95%B0%E7%BB%84/"/>
    
    
    <category term="快排" scheme="https://abusizhishen.github.io/tags/%E5%BF%AB%E6%8E%92/"/>
    
  </entry>
  
</feed>
